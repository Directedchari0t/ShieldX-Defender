name: ShieldX-Defender CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-and-test:
    name: Lint, Format, Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black pytest pytest-cov

    - name: Lint with flake8
      run: |
        flake8 core/ web/ tests/ --count --show-source --statistics --max-line-length=120

    - name: Check formatting with Black
      run: |
        black --check --line-length 120 core/ web/ tests/

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=core --cov=web --cov-report=xml

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests

  yara-validation:
    name: Validate YARA Rules
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
    - uses: actions/checkout@v4

    - name: Install YARA
      run: |
        sudo apt-get update
        sudo apt-get install -y yara

    - name: Validate YARA syntax
      run: |
        for file in data/yara_rules/*.yar; do
          yara -w -s "$file" /dev/null || exit 1
        done

  security-scan:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Bandit security scan
      uses: PyCQA/bandit@main
      with:
        targets: core/,web/
        args: |
          --severity-level high
          --confidence-level high
          --format txt
          --exit-zero

    - name: Dependency vulnerability check
      uses: pyupio/safety@v2
      with:
        api-key: ${{ secrets.SAFETY_API_KEY }}
        args: --full-report
